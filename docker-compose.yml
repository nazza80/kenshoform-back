version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: extras/docker/production/Dockerfile
    env_file:
      - ./config/prod.env
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
    volumes:
      - static:/home/wger/static
      - media:/home/wger/media
    expose:
      - 8000
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8000
      interval: 10s
      timeout: 5s
      start_period: 300s
      retries: 5
    restart: unless-stopped

  nginx:
    image: docker.io/nginx:stable
    depends_on:
      - web
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/wger/static:ro
      - media:/wger/media:ro
    ports:
      - "80:80"
    healthcheck:
      test: service nginx status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  db:
    image: docker.io/postgres:15-alpine
    environment:
      - POSTGRES_USER=wger
      - POSTGRES_PASSWORD=wger
      - POSTGRES_DB=wger
      - TZ=Europe/Berlin
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    expose:
      - 5432
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    healthcheck:
      test: pg_isready -U wger
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  cache:
    image: docker.io/redis
    expose:
      - 6379
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    volumes:
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf"]
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  celery_worker:
    build:
      context: .
      dockerfile: extras/docker/production/Dockerfile
    command: /start-worker
    env_file:
      - ./config/prod.env
    volumes:
      - media:/home/wger/media
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    depends_on:
      web:
        condition: service_healthy
    healthcheck:
      test: celery -A wger inspect ping
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  celery_beat:
    build:
      context: .
      dockerfile: extras/docker/production/Dockerfile
    command: /start-beat
    logging:
      driver: json-file
      options:
        max-size: 5m
        max-file: 5
    volumes:
      - celery-beat:/home/wger/beat/
    env_file:
      - ./config/prod.env
    depends_on:
      celery_worker:
        condition: service_healthy

volumes:
  postgres-data:
  celery-beat:
  redis-data:
  media:
  static:

networks:
  default:
    name: wger_network
